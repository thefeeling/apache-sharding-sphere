
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate
spring.h2.console.path=/h2
spring.h2.console.settings.web-allow-others=true
spring.h2.console.enabled=true

spring.shardingsphere.datasource.names=ds0,ds1

spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3306/ds0?useUnicode=true&characterEncoding=utf8
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=1234

spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3306/ds1?useUnicode=true&characterEncoding=utf8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=1234

# The sub database strategy determines which database the data enters according to the id modulus
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column = id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression = ds$->{id % 2}

# Specific tabulation strategy
# Nodes ds0.t-order-0, ds0.t-order-1, ds1.t-order-0, ds1.t-order-1
#spring.shardingsphere.sharding.tables.t_order.actual-data-nodes = ds$->{0..1}.t_order_$->{0..1}
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes = ds$->{0..1}.t_order
# Sub table field id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column = id
# The table splitting strategy takes the modulus according to the id to determine which table the data will ultimately fall in.
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression = t_order


# Generate primary key using SNOWFLAKE algorithm
spring.shardingsphere.sharding.tables.t_order.key-generator.column = id
spring.shardingsphere.sharding.tables.t_order.key-generator.type = SNOWFLAKE

#spring.shardingsphere.sharding.binding-tables=t_order

spring.shardingsphere.props.sql.show = true